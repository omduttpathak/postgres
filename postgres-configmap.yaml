apiVersion: v1
kind: ConfigMap 
metadata:
  name: postgres
data:
  create-replica-user.sh: "#!/bin/bash\nset -e\n\npsql -v ON_ERROR_STOP=1 --username
    \"$POSTGRES_USER\" --dbname \"$POSTGRES_DB\" <<-EOSQL\n\tCREATE ROLE replication
    WITH REPLICATION PASSWORD '$REPLICATION_PASSWORD' LOGIN\nEOSQL\n"

  master.conf: | 
    wal_level = hot_standby
    max_wal_senders = 5
    wal_keep_segments = 32
  pg_hba.conf: |
    # TYPE  DATABASE        USER            ADDRESS                 METHOD
    # "local" is for Unix domain socket connections only
    local   all             all                                     trust
    # IPv4 local connections:
    host    all             all             127.0.0.1/32            trust
    # IPv6 local connections:
    host    all             all             ::1/128                 trust
    # Allow replication connections from localhost, by a user with the
    # replication privilege.
    local   replication     all                                     trust
    host    replication     all             127.0.0.1/32            trust
    host    replication     all             ::1/128                 trust
    host    replication     replication     all                     md5
    host all all all md5
  postgres.conf: |
    listen_addresses = '*'
    max_connections = 100
    shared_buffers = 128MB
    dynamic_shared_memory_type = posix
    log_timezone = 'UTC'
    datestyle = 'iso, mdy'
    timezone = 'UTC'
    lc_messages = 'en_US.utf8'
    lc_monetary = 'en_US.utf8'
    lc_numeric = 'en_US.utf8'
    lc_time = 'en_US.utf8'
    default_text_search_config = 'pg_catalog.english'
    include_if_exists = 'master.conf'
    include_if_exists = 'replica.conf'
  replica.conf: | 
    hot_standby = on
    
---

apiVersion: v1
kind: ConfigMap 
metadata:
  name: postgres-config
data:
  POSTGRES_DB: postgresdb
  POSTGRES_PASSWORD: password 
  POSTGRES_USER: postgres